{"version":3,"sources":["componets/AddCategory.js","helpers/getImages.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","category","a","url","encodeURI","fetch","resp","json","data","imgs","map","img","id","title","images","downsized_medium","getImages","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAnBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,2ECP3B,WAAyBG,GAAzB,uBAAAC,EAAA,6DACQC,EADR,iDACwDC,UAAUH,GADlE,+DAEqBI,MAAMF,GAF3B,cAEQG,EAFR,gBAGyBA,EAAKC,OAH9B,uBAGUC,EAHV,EAGUA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxC,kBAYSM,GAZT,6C,sBAeeO,M,4CCLAC,EATY,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKe,UAAU,yCAAf,UACE,qBAAKC,IAAKhB,EAAKiB,IAAKP,IACpB,4BAAIA,QCFGQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEdb,mBAAS,CACjCoB,KAAM,GACNc,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAZAC,qBAAU,WAERT,EAAUf,GACPyB,MAAK,SAAAjB,GAAI,OAAIe,EAAS,CACrBhB,KAAMC,EACNa,SAAS,SAGZ,CAACrB,IAIGsB,EDjB2BI,CAAa1B,GAAjCa,EAFyB,EAE/BN,KAAcc,EAFiB,EAEjBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDjB,IAGnDqB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,eAAf,SAEIJ,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEGRgB,EAjBM,WAAO,IAAD,EACWxC,mBAAS,CAAC,YADrB,mBAClByC,EADkB,KACN1C,EADM,KAGzB,OAAO,gCACL,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEI0C,EAAWnB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCPxB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.38bf351a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      // De esta forma se accede al estado y se aniade la nueva categoria\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\n// Se anade la propiedad requerida\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n","\r\nasync function getImages(category) {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=YhDTSVDOt9v3EGyjvYNBMNSaVisiOPfQ`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const imgs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n  return imgs;\r\n}\r\n\r\nexport default getImages;\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem;","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from '../componets/GifGridItem.js'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn' >{category}</h3>\r\n\r\n      {/* Solo aplica en el true */}\r\n      {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n      <div className=\"containerGif\">\r\n        {\r\n          images.map(img =>\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img} //Aqui se mandan las propiedades del img, se mandan como una propiedad independiente\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport getImages from \"../helpers/getImages\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getImages(category)\r\n      .then(imgs => setState({\r\n        data: imgs,\r\n        loading: false\r\n      }));\r\n\r\n  }, [category]);\r\n\r\n\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './componets/AddCategory';\r\nimport { GifGrid } from './componets/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Pokemon\"]);\r\n\r\n  return <div>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategories={setCategories} />\r\n    <hr />\r\n    <ol>\r\n      {\r\n        categories.map(category =>\r\n          <GifGrid key={category} category={category} />\r\n        )\r\n      }\r\n    </ol>\r\n  </div>\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}